- 쉘 백그라운드 실행
일반적으로 SSH 접속이 중단되면 그 세션에서 Foreground로 실행중인 스크립트도 중단된다.
중단되지 않게 하려면 백그라운드로 실행하면 된다.
> nohub : 행업 시그널(종료 신호)이 와도 무시하며 실행을 계속함. 터미널이 끊겨도 계속 수행
> background & : 새로운 프로세스를 생성하여 작업 실행. 새로운 작업을 현재 세션에서 가능하게 함. 터미널이 끊기면 실행이 끝남

- nice & renice
 nice
 > 프로세스가 실행될 때 실행 우선 순위를 조정(NI값 변경)
 > 커다란 프로그램을 컴파일할 때 처럼 CPU나 메모리를 많이 사용할 떄 시스템 속도를 저하시키기 때문에 다른 프로세스에 우선순위를 줄 때 사용
 > 기본 nice값은 보통 0으로 시작
 > -20 ~ 19까지 순위 값을 조정 가능. -20이 우선순위가 가장 높고 19가 가장 낮음
 > 일반 유저는 값을 올릴수만 있음
 
 renice
 > 실행중인 프로세스에 대한 nice값을 조정
 > nice는 프로세스명으로 우선 순위를 조정하고 명령을 실행하면 새로운 프로세스가 발생하지만, renice는 PID로 우선 순위를 조정하고 기존의 프로세스 우선순위 값을 추가 없이 바로 수정한다
 > 기존의 NI값과 상관없이 지정한 NI로 바로 설정됨(nice와 차이)
 > root만이 값을 감소할 수 있음
 
- 고아프로세스 & 좀비프로세스
 고아프로세스
 > 부모 프로세스가 자식 프로세스보다 먼저 종료되면 init 프로세스가 자식 프로세스의 새로운 부모 프로세스가 됨
 > 종료되는 프로세스가 발생할 때 커널은 이 프로세스가 누구의 부모 프로세스인지 확인한 후, 커널이 자식 프로세스의 부모 프로세스 ID를 1(init 프로세스)로 바꿈
 > init 프로세스는 유닉스 계열의 운영체제에서 부팅 과정 중 생성되는 최초의 프로세스이며 시스템이 종료될때까지 계속 살아있는 데몬 프로세스 (init 프로세스의 pid는 보통 1)
 > 고아 프로세스가 작업을 종료하면 init 프로세스가 wait함수를 호출하여 고아 프로세스의 종료 상태를 회수함으로써 좀비 프로세스가 되는것을 방지
 
 좀비프로세스
 > 부모 프로세스가 자식 프로세스의 종료 상태를 회수하지 못했을 경우에 자식 프로세스를 좀비 프로세스라고 함
 > 좀비 프로세스의 경우 부모 프로세스에서 wait 시스템콜을 사용해줘야 리소스 유출을 방지할 수 있음
 
- Windows user 권한
 > 원격데스크탑 접속을 위해서는 해당 계정이 Remote Desktop Users 그룹이나 Administrator 그룹에 포함되어야 함
 > 계정에 여러 권한이(허용and거부) 중첩되어 있을 경우, 거부 권한이 허용 권한보다 우선됨
 > Administrator 그룹에 있더라도 "관리자 권한으로 실행"을 통해 상승시켜야 하는 작업이 있음
 > Windows는 각 계정마다 할당된 SID로 구분되며 유저 삭제 후, 동일한 이름의 계정을 만들더라도 다른 SID가 부여되어 이전과 같은 권한을 사용할 수 없음
 
- TCP wrapper
 > https://yangnoon.tistory.com/37

- 장애 테스트
테스트항목/요소
테스트방법
서비스(업무) 영향도

NameNode1대장애
(1) HDFSWrite/Read 정상확인
(2) NameNode1대장애발생
(3) HDFSWrite/Read 정상확인
-NameNode는A-S이중화이기때문에영향이없음

DataNode1대장애
(1) HDFSWrite/Read 정상확인
(2) DataNode1대장애발생
(3) HDFSWrite/Read 정상확인
-DataNode는다중화구성이며, 3way 복제이기때문에영향이없음

DataNode2대장애
(1) HDFSWrite/Read 정상확인
(2) DataNode2대장애발생
(3) HDFSWrite/Read 정상확인
-DataNode는다중화구성이며, 3way 복제이기때문에영향이없음

DataNode디스크1개장애
(1) HDFSWrite/Read 정상확인
(2) DataNode디스크1개장애발생
(3) HDFSWrite/Read 정상확인
-DataNode1개서버안에는디스크다중화구성이며, 3way 복제이기때문에영향이없음


- AWS 이관
AWSIaaS 기반구성EC2 기반에서Managed Service를제외한솔루션(설치형)으로 구성하여 요구사항 대응방안 마련하고 대응방안의 제약/검토사항을기술
1)Select (방안) redis또는memcached,* CQRS 적용도맞는것으로함(제약/검토사항) cache 구성 변경에 따른 응용 변경 데이터 변경 여부 및 이에 따른 동기화 방안 공통 데이터처리를 위한 응용 변경 여부
2)History Logging (방안) nosql계열DB (cassandra, mongodb등)(제약/검토사항) Nosql로 변경에따른 응용변경 NoSQLDB의 이중화방안
3)확장성/가용성(방안) oracle 또는 mariaDB 등의 이중화구성(제약/검토사항) 문제에서Oracle로 명시하고있음 MySQL / MariaDB 적용시 이에따른query 전환비용/일정포함 필요 Oracle 적용시 라이선스 확보/이중화 방안 등 검토필요(Data Guard / OGG 등) 성능에 대한 사전검토필요 (디스크type 및서버type 등)

AWS PaaS(ManagedService)기반구성
솔루션 선정하여 요구사항 대응방안 마련하고 대응 답안의 제약/검토사항을기술
1) Select (방안) elasticCache사용(제약/검토사항) 데이터정합성보장방안(Oracle to elasticcache배치구성방안에대한추가검토)elasticCache구성방안(Cluster vs non-cluster mode)cache 구성변경에 따른 응용변경
elasticCache 제약사항 검토(메모리사이즈별비용등)
2) History Logging(방안) dynamoDB사용(제약/검토사항) 데이터 성능보장 방안(data skew)
비정형 데이터 분석방안 검토 필요(ex powerBI같은..) Nosql로 변경에 따른 응용변경 DynamoDB 제약사항 검토 읽기/쓰기 제약 및 비용 인덱스수, 키크기등(AWS 문서참조)
3)확장성/가용성(방안) RDS (oracle or mariadbor오로라DB)
(RDSoracle인경우제약/검토사항)
Oracle RDS의지원사이즈: 최대64TBOracle license에대한확보방안검토필요
read/write확장/분리는 별도read replica 구성검토(RDSmariadb/오로라DB인경우제약/검토사항) 솔루션 적용으로 인한 응용단 변경 분량 검토필요-> Procedure, Pro*C 등의 OS단에 적용된 스크립트 기반의 업무에대한 적용방안 검토포함
별도read replica 구성을 통한 확장성 검토

- 점검
1) 점검 대상 : L4, NAS, DB 스토리지
2)
점검 방법 :
• L4 : 네트워크 대역폭 등의 자원 병목 점검
• NAS : 이미지 파일 영역의 디스크 처리속 도 , Disk 분산 여부등의 자원 병목 점검
• DB : SQL Plan 의 특이사항은 발견되지 않는다는 사실에 착안하여 DB 스토리지 처리속도 , Disk 분산 여부등의 자원
병목 점검

- 원인 분석
(1) cpu 사용율 측면에서 보면 usr + sys 대비 wio 비율이 매우 높음
(2) 현재 구성의 pv에서 처리가능한 iops성능 (100iops) 이상의 요청(peak시 1787)이 들어오고 있음
(3) 디스크 busy측면에서 보면 전체 디스크 대비 특정 디스크의 busy%가 편중 되어 있으며, 50% 이상~ 90% 정도로 매우 IO부하가 심함
(4) 업무 특성은 DB 데이터를 축적하는 패턴이며 실제로 부하가 심한 pv는 DBMS Data및 index영역임
-> 현재의 구성에서 처리 가능한 Level 대비 과도한 IO 처리를 요청하고 있어 디스크는 매우 바쁜 상황이며, 이로 인해 cpu는 일을 하고 싶어도 IO를 기다리느라 일을 제대로 처리하지 못하는 상황이라 응답시간이 저하되고 있는것이다
개선방안:
- pv02와 mapping된 block device를 Premium Type으로 교체 구성
- Premium Type으로 교체해도 1000 iops 가 max라서 peak시 iops처리 시 지연 발생 가능하므로 복수 개의 device를 할당하여 Striping하는 것으로 재구성한다